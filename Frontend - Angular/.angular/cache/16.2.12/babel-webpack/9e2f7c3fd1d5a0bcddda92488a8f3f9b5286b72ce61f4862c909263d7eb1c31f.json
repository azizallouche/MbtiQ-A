{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport instances from '../../dom/instances';\nvar Default = {\n  onCollapse: function () {},\n  onExpand: function () {},\n  onToggle: function () {}\n};\nvar DefaultInstanceOptions = {\n  id: null,\n  override: true\n};\nvar Collapse = /** @class */function () {\n  function Collapse(targetEl, triggerEl, options, instanceOptions) {\n    if (targetEl === void 0) {\n      targetEl = null;\n    }\n    if (triggerEl === void 0) {\n      triggerEl = null;\n    }\n    if (options === void 0) {\n      options = Default;\n    }\n    if (instanceOptions === void 0) {\n      instanceOptions = DefaultInstanceOptions;\n    }\n    this._instanceId = instanceOptions.id ? instanceOptions.id : targetEl.id;\n    this._targetEl = targetEl;\n    this._triggerEl = triggerEl;\n    this._options = __assign(__assign({}, Default), options);\n    this._visible = false;\n    this._initialized = false;\n    this.init();\n    instances.addInstance('Collapse', this, this._instanceId, instanceOptions.override);\n  }\n  Collapse.prototype.init = function () {\n    var _this = this;\n    if (this._triggerEl && this._targetEl && !this._initialized) {\n      if (this._triggerEl.hasAttribute('aria-expanded')) {\n        this._visible = this._triggerEl.getAttribute('aria-expanded') === 'true';\n      } else {\n        // fix until v2 not to break previous single collapses which became dismiss\n        this._visible = !this._targetEl.classList.contains('hidden');\n      }\n      this._clickHandler = function () {\n        _this.toggle();\n      };\n      this._triggerEl.addEventListener('click', this._clickHandler);\n      this._initialized = true;\n    }\n  };\n  Collapse.prototype.destroy = function () {\n    if (this._triggerEl && this._initialized) {\n      this._triggerEl.removeEventListener('click', this._clickHandler);\n      this._initialized = false;\n    }\n  };\n  Collapse.prototype.removeInstance = function () {\n    instances.removeInstance('Collapse', this._instanceId);\n  };\n  Collapse.prototype.destroyAndRemoveInstance = function () {\n    this.destroy();\n    this.removeInstance();\n  };\n  Collapse.prototype.collapse = function () {\n    this._targetEl.classList.add('hidden');\n    if (this._triggerEl) {\n      this._triggerEl.setAttribute('aria-expanded', 'false');\n    }\n    this._visible = false;\n    // callback function\n    this._options.onCollapse(this);\n  };\n  Collapse.prototype.expand = function () {\n    this._targetEl.classList.remove('hidden');\n    if (this._triggerEl) {\n      this._triggerEl.setAttribute('aria-expanded', 'true');\n    }\n    this._visible = true;\n    // callback function\n    this._options.onExpand(this);\n  };\n  Collapse.prototype.toggle = function () {\n    if (this._visible) {\n      this.collapse();\n    } else {\n      this.expand();\n    }\n    // callback function\n    this._options.onToggle(this);\n  };\n  Collapse.prototype.updateOnCollapse = function (callback) {\n    this._options.onCollapse = callback;\n  };\n  Collapse.prototype.updateOnExpand = function (callback) {\n    this._options.onExpand = callback;\n  };\n  Collapse.prototype.updateOnToggle = function (callback) {\n    this._options.onToggle = callback;\n  };\n  return Collapse;\n}();\nexport function initCollapses() {\n  document.querySelectorAll('[data-collapse-toggle]').forEach(function ($triggerEl) {\n    var targetId = $triggerEl.getAttribute('data-collapse-toggle');\n    var $targetEl = document.getElementById(targetId);\n    // check if the target element exists\n    if ($targetEl) {\n      if (!instances.instanceExists('Collapse', $targetEl.getAttribute('id'))) {\n        new Collapse($targetEl, $triggerEl);\n      } else {\n        // if instance exists already for the same target element then create a new one with a different trigger element\n        new Collapse($targetEl, $triggerEl, {}, {\n          id: $targetEl.getAttribute('id') + '_' + instances._generateRandomId()\n        });\n      }\n    } else {\n      console.error(\"The target element with id \\\"\".concat(targetId, \"\\\" does not exist. Please check the data-collapse-toggle attribute.\"));\n    }\n  });\n}\nif (typeof window !== 'undefined') {\n  window.Collapse = Collapse;\n  window.initCollapses = initCollapses;\n}\nexport default Collapse;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","instances","Default","onCollapse","onExpand","onToggle","DefaultInstanceOptions","id","override","Collapse","targetEl","triggerEl","options","instanceOptions","_instanceId","_targetEl","_triggerEl","_options","_visible","_initialized","init","addInstance","_this","hasAttribute","getAttribute","classList","contains","_clickHandler","toggle","addEventListener","destroy","removeEventListener","removeInstance","destroyAndRemoveInstance","collapse","add","setAttribute","expand","remove","updateOnCollapse","callback","updateOnExpand","updateOnToggle","initCollapses","document","querySelectorAll","forEach","$triggerEl","targetId","$targetEl","getElementById","instanceExists","_generateRandomId","console","error","concat","window"],"sources":["/Users/3alouch/Documents/GitHub/MbtiQ-A/Frontend - Angular/node_modules/flowbite/lib/esm/components/collapse/index.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport instances from '../../dom/instances';\nvar Default = {\n    onCollapse: function () { },\n    onExpand: function () { },\n    onToggle: function () { },\n};\nvar DefaultInstanceOptions = {\n    id: null,\n    override: true,\n};\nvar Collapse = /** @class */ (function () {\n    function Collapse(targetEl, triggerEl, options, instanceOptions) {\n        if (targetEl === void 0) { targetEl = null; }\n        if (triggerEl === void 0) { triggerEl = null; }\n        if (options === void 0) { options = Default; }\n        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }\n        this._instanceId = instanceOptions.id\n            ? instanceOptions.id\n            : targetEl.id;\n        this._targetEl = targetEl;\n        this._triggerEl = triggerEl;\n        this._options = __assign(__assign({}, Default), options);\n        this._visible = false;\n        this._initialized = false;\n        this.init();\n        instances.addInstance('Collapse', this, this._instanceId, instanceOptions.override);\n    }\n    Collapse.prototype.init = function () {\n        var _this = this;\n        if (this._triggerEl && this._targetEl && !this._initialized) {\n            if (this._triggerEl.hasAttribute('aria-expanded')) {\n                this._visible =\n                    this._triggerEl.getAttribute('aria-expanded') === 'true';\n            }\n            else {\n                // fix until v2 not to break previous single collapses which became dismiss\n                this._visible = !this._targetEl.classList.contains('hidden');\n            }\n            this._clickHandler = function () {\n                _this.toggle();\n            };\n            this._triggerEl.addEventListener('click', this._clickHandler);\n            this._initialized = true;\n        }\n    };\n    Collapse.prototype.destroy = function () {\n        if (this._triggerEl && this._initialized) {\n            this._triggerEl.removeEventListener('click', this._clickHandler);\n            this._initialized = false;\n        }\n    };\n    Collapse.prototype.removeInstance = function () {\n        instances.removeInstance('Collapse', this._instanceId);\n    };\n    Collapse.prototype.destroyAndRemoveInstance = function () {\n        this.destroy();\n        this.removeInstance();\n    };\n    Collapse.prototype.collapse = function () {\n        this._targetEl.classList.add('hidden');\n        if (this._triggerEl) {\n            this._triggerEl.setAttribute('aria-expanded', 'false');\n        }\n        this._visible = false;\n        // callback function\n        this._options.onCollapse(this);\n    };\n    Collapse.prototype.expand = function () {\n        this._targetEl.classList.remove('hidden');\n        if (this._triggerEl) {\n            this._triggerEl.setAttribute('aria-expanded', 'true');\n        }\n        this._visible = true;\n        // callback function\n        this._options.onExpand(this);\n    };\n    Collapse.prototype.toggle = function () {\n        if (this._visible) {\n            this.collapse();\n        }\n        else {\n            this.expand();\n        }\n        // callback function\n        this._options.onToggle(this);\n    };\n    Collapse.prototype.updateOnCollapse = function (callback) {\n        this._options.onCollapse = callback;\n    };\n    Collapse.prototype.updateOnExpand = function (callback) {\n        this._options.onExpand = callback;\n    };\n    Collapse.prototype.updateOnToggle = function (callback) {\n        this._options.onToggle = callback;\n    };\n    return Collapse;\n}());\nexport function initCollapses() {\n    document\n        .querySelectorAll('[data-collapse-toggle]')\n        .forEach(function ($triggerEl) {\n        var targetId = $triggerEl.getAttribute('data-collapse-toggle');\n        var $targetEl = document.getElementById(targetId);\n        // check if the target element exists\n        if ($targetEl) {\n            if (!instances.instanceExists('Collapse', $targetEl.getAttribute('id'))) {\n                new Collapse($targetEl, $triggerEl);\n            }\n            else {\n                // if instance exists already for the same target element then create a new one with a different trigger element\n                new Collapse($targetEl, $triggerEl, {}, {\n                    id: $targetEl.getAttribute('id') +\n                        '_' +\n                        instances._generateRandomId(),\n                });\n            }\n        }\n        else {\n            console.error(\"The target element with id \\\"\".concat(targetId, \"\\\" does not exist. Please check the data-collapse-toggle attribute.\"));\n        }\n    });\n}\nif (typeof window !== 'undefined') {\n    window.Collapse = Collapse;\n    window.initCollapses = initCollapses;\n}\nexport default Collapse;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}